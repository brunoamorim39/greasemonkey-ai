services:
  # PWA Service - Next.js TypeScript application (standalone)
  pwa:
    build:
      context: ./pwa
      target: development
    container_name: greasemonkey-pwa
    env_file:
      - ./pwa/.env
    environment:
      - NODE_ENV=development
      - DEV_MODE=dev:webpack  # Use dev:webpack to switch to webpack mode if needed
      - WATCHPACK_POLLING=true  # Enable hot reload in Docker
      - CHOKIDAR_USEPOLLING=true  # Force polling for file changes
      - CHOKIDAR_INTERVAL=1000  # Poll every 1 second
      - TURBOPACK_REMOTE_CACHE_READ_ONLY=false
      - TURBOPACK_ENABLE_FILESYSTEM_WATCHING=true  # Enable Turbopack file watching
      - TURBOPACK_USE_POLLING=true  # Force Turbopack to use polling in Docker
      - FAST_REFRESH=true  # Ensure Fast Refresh is enabled
      - WDS_SOCKET_HOST=0.0.0.0  # Fix WebSocket connection for hot reload
      - FORCE_COLOR=1  # Better terminal output
      - NEXT_TELEMETRY_DISABLED=1  # Disable telemetry for faster startup
    ports:
      - "3000:3000"
    volumes:
      - ./pwa:/app:delegated
      - /app/node_modules
      - /app/.next/cache
    restart: unless-stopped

    # Stripe CLI for webhook forwarding (development only)
  stripe:
    image: stripe/stripe-cli:latest
    container_name: greasemonkey-stripe
    env_file:
      - ./pwa/.env
    environment:
      - STRIPE_DEVICE_NAME=greasemonkey-docker
    command:
      - listen
      - --forward-to
      - http://pwa:3000/api/stripe/webhook
      - --format=JSON
    depends_on:
      - pwa
    restart: unless-stopped
    volumes:
      - stripe_config:/root/.config/stripe

  # PWA Production service (for testing production builds)
  pwa-prod:
    build:
      context: ./pwa
      target: production
    container_name: greasemonkey-pwa-prod
    env_file:
      - ./pwa/.env
    environment:
      - NODE_ENV=production
    ports:
      - "3001:3000"
    restart: unless-stopped
    profiles:
      - prod

networks:
  default:
    name: greasemonkey-net

volumes:
  stripe_config:
